<?php

namespace Sunaoka\Aws\Structures\AppSync;

class AppSyncClient extends \Aws\AppSync\AppSyncClient
{
    use AssociateApi\AssociateApiTrait;
    use AssociateMergedGraphqlApi\AssociateMergedGraphqlApiTrait;
    use AssociateSourceGraphqlApi\AssociateSourceGraphqlApiTrait;
    use CreateApi\CreateApiTrait;
    use CreateApiCache\CreateApiCacheTrait;
    use CreateApiKey\CreateApiKeyTrait;
    use CreateChannelNamespace\CreateChannelNamespaceTrait;
    use CreateDataSource\CreateDataSourceTrait;
    use CreateDomainName\CreateDomainNameTrait;
    use CreateFunction\CreateFunctionTrait;
    use CreateGraphqlApi\CreateGraphqlApiTrait;
    use CreateResolver\CreateResolverTrait;
    use CreateType\CreateTypeTrait;
    use DeleteApi\DeleteApiTrait;
    use DeleteApiCache\DeleteApiCacheTrait;
    use DeleteApiKey\DeleteApiKeyTrait;
    use DeleteChannelNamespace\DeleteChannelNamespaceTrait;
    use DeleteDataSource\DeleteDataSourceTrait;
    use DeleteDomainName\DeleteDomainNameTrait;
    use DeleteFunction\DeleteFunctionTrait;
    use DeleteGraphqlApi\DeleteGraphqlApiTrait;
    use DeleteResolver\DeleteResolverTrait;
    use DeleteType\DeleteTypeTrait;
    use DisassociateApi\DisassociateApiTrait;
    use DisassociateMergedGraphqlApi\DisassociateMergedGraphqlApiTrait;
    use DisassociateSourceGraphqlApi\DisassociateSourceGraphqlApiTrait;
    use EvaluateCode\EvaluateCodeTrait;
    use EvaluateMappingTemplate\EvaluateMappingTemplateTrait;
    use FlushApiCache\FlushApiCacheTrait;
    use GetApiAssociation\GetApiAssociationTrait;
    use GetApiCache\GetApiCacheTrait;
    use GetChannelNamespace\GetChannelNamespaceTrait;
    use GetDataSource\GetDataSourceTrait;
    use GetDataSourceIntrospection\GetDataSourceIntrospectionTrait;
    use GetDomainName\GetDomainNameTrait;
    use GetFunction\GetFunctionTrait;
    use GetGraphqlApi\GetGraphqlApiTrait;
    use GetGraphqlApiEnvironmentVariables\GetGraphqlApiEnvironmentVariablesTrait;
    use GetIntrospectionSchema\GetIntrospectionSchemaTrait;
    use GetResolver\GetResolverTrait;
    use GetSchemaCreationStatus\GetSchemaCreationStatusTrait;
    use GetSourceApiAssociation\GetSourceApiAssociationTrait;
    use GetType\GetTypeTrait;
    use ListApiKeys\ListApiKeysTrait;
    use ListApis\ListApisTrait;
    use ListChannelNamespaces\ListChannelNamespacesTrait;
    use ListDataSources\ListDataSourcesTrait;
    use ListDomainNames\ListDomainNamesTrait;
    use ListFunctions\ListFunctionsTrait;
    use ListGraphqlApis\ListGraphqlApisTrait;
    use ListResolvers\ListResolversTrait;
    use ListResolversByFunction\ListResolversByFunctionTrait;
    use ListSourceApiAssociations\ListSourceApiAssociationsTrait;
    use ListTagsForResource\ListTagsForResourceTrait;
    use ListTypes\ListTypesTrait;
    use ListTypesByAssociation\ListTypesByAssociationTrait;
    use PutGraphqlApiEnvironmentVariables\PutGraphqlApiEnvironmentVariablesTrait;
    use StartDataSourceIntrospection\StartDataSourceIntrospectionTrait;
    use StartSchemaCreation\StartSchemaCreationTrait;
    use StartSchemaMerge\StartSchemaMergeTrait;
    use TagResource\TagResourceTrait;
    use UntagResource\UntagResourceTrait;
    use UpdateApi\UpdateApiTrait;
    use UpdateApiCache\UpdateApiCacheTrait;
    use UpdateApiKey\UpdateApiKeyTrait;
    use UpdateChannelNamespace\UpdateChannelNamespaceTrait;
    use UpdateDataSource\UpdateDataSourceTrait;
    use UpdateDomainName\UpdateDomainNameTrait;
    use UpdateFunction\UpdateFunctionTrait;
    use UpdateGraphqlApi\UpdateGraphqlApiTrait;
    use UpdateResolver\UpdateResolverTrait;
    use UpdateSourceApiAssociation\UpdateSourceApiAssociationTrait;
    use UpdateType\UpdateTypeTrait;
    use GetApiResource\GetApiResourceTrait;
}
